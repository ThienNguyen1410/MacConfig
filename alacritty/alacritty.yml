  # Configuration for Alacritty, the GPU enhanced terminal emulator.

  # Any items in the `env` entry below will be added as
  # environment variables. Some entries may override variables
  # set by alacritty itself.
  #env:
    # TERM variable
    #
    # This value is used to set the `$TERM` environment variable for
    # each instance of Alacritty. If it is not present, alacritty will
    # check the local terminfo database and use `alacritty` if it is
    # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

  window:
    # Window dimensions (changes require restart)
    #
    # Specified in number of columns/lines, not pixels.
    # If both are `0`, this setting is ignored.
    dimensions:
      columns: 0
      lines: 0

    # Window position (changes require restrt)
    #
    # Specified in number of pixels.
    # If the position is not set, the window manager will handle the placement.
    #position:
    #  x: 0
    #  y: 0

    # Window padding (changes require restart)
    #
    # Blank space added around the window in pixels. This padding is scaled
    # by DPI and the specified value is always added at both opposing sides.
    padding:
      x: 20
      y: 20

    # Spread additional padding evenly around the terminal content.
    dynamic_padding: false

    # Window decorations
    #
    # Values for `decorations`:
    #     - full: Borders and title bar
    #     - none: Neither borders nor title bar
    #
    # Values for `decorations` (macOS only):
    #     - transparent: Title bar, transparent background and title bar buttons
    #     - buttonless: Title bar, transparent background, but no title bar buttons
    decorations: buttonless

    startup_mode: Maximized

  search:
      matches:
        foreground: '#50f88f'
        background: '#a5f77e'
      focused_match:
        foreground: '#a5f77e'
        background: '#a5f77e'

  scrolling:
    # Maximum number of lines in the scrollback buffer.
    # Specifying '0' will disable scrolling.
    history: 10000

    # Number of lines the viewport will move for every line scrolled when
    # scrollback is enabled (history > 0).
    multiplier: 3

    # Scroll to the bottom when new text is written to the terminal.
  # Spaces per Tab (changes require restart)
  #
  # This setting defines the width of a tab in cells.
  #
  # Some applications, like Emacs, rely on knowing about the width of a tab.
  # To prevent unexpected behavior in these applications, it's also required to
  # change the `it` value in terminfo when altering this setting.
  # Font configuration (changes require restart)
  font:
    normal:
      family: 'jetbrainsmono nerd font'
      style: Regular
    bold:
      family: 'jetbrainsmono nerd font'
      style: Bold
    italic:
      family: 'jetbrainsmono nerd font'
      style: Italic
    bold_italic:
      family: 'jetbrainsmono nerd font'
      style: Bold Italic

    # Point size
    size: 15.0

    # Offset is the extra space around each character. `offset.y` can be thought of
    # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
    offset:
      x: 0
      y: 6

    # Glyph offset determines the locations of the glyphs within their cells with
    # the default being at the bottom. Increasing `x` moves the glyph to the right,
    # increasing `y` moves the glyph upwards.
    glyph_offset:
      x: 0
      y: 0

    # Thin stroke font rendering (macOS only)
    #
    # Thin strokes are suitable for retina displays, but for non-retina screens
    # it is recommended to set `use_thin_strokes` to `false`
    #
    # macOS >= 10.14.x:
    #
    # If the font quality on non-retina display looks bad then set
    # `use_thin_strokes` to `true` and enable font smoothing by running the
    # following command:
    #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
    #
    # This is a global setting and will require a log out or restart to take
    # effect.
    use_thin_strokes: true

  debug:
    # Display the time it takes to redraw each frame.
    render_timer: false

    # Keep the log file after quitting Alacritty.
    persistent_logging: false

  # If `true`, bold text is drawn using the bright color variants.
  draw_bold_text_with_bright_colors: true

  # Colors (Monokai Dark)
  colors:
    # Default colors
    primary:
      background: '#272822'
      foreground: '#F8F8F2'

    # Normal colors
    normal:
     black:   '#272822'
     red:     '#F92672'
     green:   '#A6E22E'
     yellow:  '#F4BF75'
     blue:    '#66D9EF'
     magenta: '#AE81FF'
     cyan:    '#A1EFE4'
     white:   '#F8F8F2'

    # Bright colors
    bright:
     black:   '#75715E'
     red:     '#F92672'
     green:   '#A6E22E'
     yellow:  '#F4BF75'
     blue:    '#66D9EF'
     magenta: '#AE81FF'
     cyan:    '#A1EFE4'
     white:   '#F9F8F5'


  # Visual Bell
  #
  # Any time the BEL code is received, Alacritty "rings" the visual bell. Once
  # rung, the terminal background will be set to white and transition back to the
  # default background color. You can control the rate of this transition by
  # setting the `duration` property (represented in milliseconds). You can also
  # configure the transition function by setting the `animation` property.
  #
  # Values for `animation`:
  #   - Ease
  #   - EaseOut
  #   - EaseOutSine
  #   - EaseOutQuad
  #   - EaseOutCubic
  #   - EaseOutQuart
  #   - EaseOutQuint
  #   - EaseOutExpo
  #   - EaseOutCirc
  #   - Linear
  #
  # Specifying a `duration` of `0` will disable the visual bell.
  bell:
    animation: EaseOutExpo
    duration: 0
    color: '0xffffff'

  # Background opacity
  #
  # Window opacity as a floating point number from `0.0` to `1.0`.
  # The value `0.0` is completely transparent and `1.0` is opaque.
  window.opacity: 1.0

  # Mouse bindings
  #
  # Available fields:
  #   - mouse
  #   - action
  #   - mods (optional)
  #
  # Values for `mouse`:
  #   - Middle
  #   - Left
  #   - Right
  #   - Numeric identifier such as `5`
  #
  # All available `mods` and `action` values are documented in the key binding
  # section.
  mouse_bindings:
    - { mouse: Middle, action: PasteSelection }

  mouse:
    # Click settings
    #
    # The `double_click` and `triple_click` settings control the time
    # alacritty should wait for accepting multiple clicks as one double
    # or triple click.
    double_click: { threshold: 300 }
    triple_click: { threshold: 300 }

    # If this is `true`, the cursor is temporarily hidden when typing.
    hide_when_typing: true

    hints:
      # URL launcher
      #
      # This program is executed when clicking on a text which is recognized as a URL.
      # The URL is always added to the command as the last parameter.
      #
      # When set to `None`, URL launching will be disabled completely.
      #
      # Default:
      #   - (macOS) open
      #   - (Linux) xdg-open
      #   - (Windows) explorer
      #launcher:
      #  program: xdg-open
      #  args: []

      # URL modifiers
      #
      # These are the modifiers that need to be held down for opening URLs when clicking
      # on them. The available modifiers are documented in the key binding section.
      modifiers: None

  selection:
    semantic_escape_chars: ",│`|:\"' ()[]{}<>"

    # When set to `true`, selected text will be copied to the primary clipboard.
    save_to_clipboard: false

  # Allow terminal applications to change Alacritty's window title.
  dynamic_title: true

  cursor:
    # Cursor style
    #
    # Values for `style`:
    #   - ▇ Block
    #   - _ Underline
    #   - | Beam
    style: Block

    # If this is `true`, the cursor will be rendered as a hollow box when the
    # window is not focused.
    unfocused_hollow: true

  # Live config reload (changes require restart)
  live_config_reload: true

  # Shell
  #
  # You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
  # Entries in `shell.args` are passed unmodified as arguments to the shell.
  #
  # Default:
  #   - (Linux/macOS) /bin/bash --login
  #   - (Windows) powershell
  #shell:
  #  program: /bin/bash
  #  args:
  #    - --login

  # Windows 10 ConPTY backend (Windows only)
  #
  # This will enable better color support and may resolve other issues,
  # however this API and its implementation is still young and so is
  # disabled by default, as stability may not be as good as the winpty
  # backend.
  #
  # Alacritty will fall back to the WinPTY automatically if the ConPTY
  # backend cannot be initialized.
  enable_experimental_conpty_backend: false

  # Send ESC (\x1b) before characters when alt is pressed.
  key_bindings:
    - { key: Key0, mods: Alt, chars: "\x1b0" }
    - { key: Key1, mods: Alt, chars: "\x1b1" }
    - { key: Key2, mods: Alt, chars: "\x1b2" }
    - { key: Key3, mods: Alt, chars: "\x1b3" }
    - { key: Key4, mods: Alt, chars: "\x1b4" }
    - { key: Key5, mods: Alt, chars: "\x1b5" }
    - { key: Key6, mods: Alt, chars: "\x1b6" }
    - { key: Key7, mods: Alt, chars: "\x1b7" }
    - { key: Key8, mods: Alt, chars: "\x1b8" }
    - { key: Key9, mods: Alt, chars: "\x1b9" }
    - { key: A, mods: Alt, chars: "\x1ba" }
    - { key: B, mods: Alt, chars: "\x1bb" }
    - { key: C, mods: Alt, chars: "\x1bc" }
    - { key: D, mods: Alt, chars: "\x1bd" }
    - { key: J, mods: Alt, chars: "\x1bj" }
    - { key: K, mods: Alt, chars: "\x1bk" }
    - { key: L, mods: Alt, chars: "\x1bl" }
    - { key: I, mods: Alt, chars: "\x1bi" }
    - { key: N, mods: Command, action: CreateNewWindow }
    - { key: Key8,    mods: Control,            action: ResetFontSize }
    - { key: Key0,  mods: Control,            action: IncreaseFontSize }
    - { key: Key9,  mods: Control,            action: DecreaseFontSize }
    - { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode}
